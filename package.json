{
  "name": "motomind-ai",
  "version": "0.1.0",
  "description": "Fleet intelligence you can explain, audit, and trust",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3005",
    "build": "next build",
    "start": "next start -p 3005",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:ai": "jest scripts/__tests__/ai-integrations.test.ts --testTimeout=60000",
    "test:security": "jest --config=tests/security/jest.config.js",
    "test:security:ci": "jest --config=tests/security/jest.config.js --ci --coverage=false",
    "test:isolation": "jest tests/isolation",
    "test:integration": "jest tests/integration --testTimeout=30000",
    "test:integration:watch": "jest tests/integration --watch --testTimeout=30000",
    "test:integration:ci": "jest tests/integration --ci --coverage=false --testTimeout=30000",
    "test:all": "npm run test:security:ci && npm run test:integration:ci",
    "fix-permissions": "./scripts/devops-suite/fix-permissions.sh",
    "protect": "node scripts/windsurf-protection.js protect",
    "protect:check": "node scripts/windsurf-protection.js check",
    "db:migrate": "npx tsx scripts/database-suite/migrate.ts",
    "db:migrate:old": "npx tsx scripts/run-migrations.ts",
    "db:smart-migrate": "npx tsx scripts/smart-migrate.ts",
    "db:test-migration": "npx tsx scripts/test-migration.ts",
    "db:storage": "npx tsx scripts/database-suite/storage-manager.ts",
    "db:doctor": "npx tsx scripts/database-suite/doctor.ts",
    "db:doctor:ai": "npx tsx scripts/database-suite/doctor-ai.ts",
    "db:schema-diff": "npx tsx scripts/database-suite/diff.ts",
    "db:seed": "npx tsx scripts/dev-tools/seed.ts",
    "db:apply-rls": "npx tsx scripts/database-suite/apply-rls-simple.ts",
    "supabase:admin": "npx tsx scripts/database-suite/supabase-admin-v2.ts",
    "supabase:admin:old": "npx tsx scripts/database-suite/supabase-admin.ts",
    "repo:analyze": "npx tsx scripts/dev-tools/repo-analyze.ts",
    "repo:clean": "npx tsx scripts/dev-tools/repo-clean.ts",
    "repo:clean:fix": "npx tsx scripts/dev-tools/repo-clean.ts --fix",
    "windsurf:analyze": "npx tsx scripts/windsurf-tools/windsurf-context.ts analyze",
    "windsurf:guide": "npx tsx scripts/windsurf-tools/windsurf-context.ts guide",
    "windsurf:validate": "npm run repo:clean && npm run db:validate && npm run test:security",
    "product:analyze": "npx tsx scripts/dev-tools/product-intelligence.ts analyze",
    "product:brief": "npx tsx scripts/dev-tools/product-intelligence.ts brief",
    "product:analyze:ai": "npx tsx scripts/dev-tools/product-intelligence-ai.ts analyze",
    "product:brief:ai": "npx tsx scripts/dev-tools/product-intelligence-ai.ts brief",
    "build:errors:ai": "npx tsx scripts/dev-tools/parse-build-errors-ai.ts",
    "tools:remind": "npx tsx scripts/windsurf-tools/tool-enforcer.ts remind",
    "tools:check": "npx tsx scripts/windsurf-tools/tool-enforcer.ts check",
    "tools:before-code": "npx tsx scripts/windsurf-tools/tool-enforcer.ts before-code",
    "tools:after-code": "npx tsx scripts/windsurf-tools/tool-enforcer.ts after-code",
    "tools:before-commit": "npx tsx scripts/windsurf-tools/tool-enforcer.ts before-commit",
    "tools:generate-reminders": "npx tsx scripts/windsurf-tools/tool-enforcer.ts generate-reminders",
    "tools:log": "npx tsx scripts/windsurf-tools/tool-enforcer.ts log",
    "arch:validate": "npx tsx scripts/qa-platform/validate-architecture.ts",
    "arch:validate:staged": "npx tsx scripts/qa-platform/validate-architecture.ts --staged",
    "arch:validate:ai": "npx tsx scripts/qa-platform/validate-architecture-ai.ts",
    "migrate": "npx tsx scripts/migration-toolkit/orchestrate-migration.ts",
    "migrate:ai": "npx tsx scripts/migration-toolkit/orchestrate-migration.ts --ai",
    "migrate:codex": "npx tsx scripts/migration-toolkit/orchestrate-migration.ts --ai --codex",
    "migrate:analyze": "npx tsx scripts/migration-toolkit/analyze-feature-complexity.ts",
    "migrate:analyze:ai": "npx tsx scripts/migration-toolkit/analyze-code-structure-ai.ts",
    "migrate:predict": "npx tsx scripts/migration-toolkit/predict-migration-issues.ts",
    "migrate:checklist": "npx tsx scripts/migration-toolkit/generate-migration-checklist.ts",
    "migrate:checklist:ai": "npx tsx scripts/migration-toolkit/generate-adaptive-checklist.ts",
    "migrate:complete": "npx tsx scripts/migration-toolkit/analyze-migration-results.ts",
    "migrate:mark-complete": "npx tsx scripts/migration-toolkit/mark-complete.ts",
    "migrate:learn": "npx tsx scripts/migration-toolkit/detect-patterns.ts && npx tsx scripts/migration-toolkit/improve-estimates.ts",
    "migrate:patterns": "npx tsx scripts/migration-toolkit/detect-patterns.ts",
    "migrate:improve": "npx tsx scripts/migration-toolkit/improve-estimates.ts",
    "migrate:feature": "npx tsx scripts/migration-toolkit/migrate-feature.ts",
    "codex:watch": "npx tsx scripts/dev-tools/codex-watcher.ts",
    "codex:status": "bash scripts/dev-tools/codex-helpers.sh status",
    "codex:feedback": "npx tsx scripts/dev-tools/check-codex-feedback.ts",
    "windsurf:status": "npx tsx scripts/windsurf-tools/windsurf-session.ts",
    "windsurf:next": "npx tsx scripts/windsurf-tools/windsurf-next.ts",
    "windsurf:check": "npx tsx scripts/windsurf-tools/windsurf-session.ts",
    "windsurf:graph": "npx tsx scripts/windsurf-tools/codebase-graph.ts",
    "windsurf:query": "npx tsx scripts/windsurf-tools/query-graph.ts",
    "windsurf:batch": "npx tsx scripts/windsurf-tools/batch-operations.ts",
    "windsurf:history": "npx tsx scripts/windsurf-tools/operation-history.ts",
    "windsurf:patterns": "npx tsx scripts/windsurf-tools/pattern-library.ts",
    "windsurf:context": "npx tsx scripts/windsurf-tools/context-checkpoint.ts",
    "refine:vehicles": "npx tsx scripts/refine-vehicles-structure.ts",
    "deploy": "npx tsx scripts/devops-suite/smart-deploy.ts",
    "deploy:wait": "npx tsx scripts/devops-suite/wait-for-vercel.ts",
    "deploy:fast": "npx tsx scripts/devops-suite/smart-deploy.ts --fast",
    "deploy:no-wait": "npx tsx scripts/devops-suite/smart-deploy.ts --no-wait",
    "deploy:risk:ai": "npx tsx scripts/devops-suite/deploy-risk-ai.ts",
    "rollback": "npx tsx scripts/devops-suite/rollback.ts",
    "rollback:last": "npx tsx scripts/devops-suite/rollback.ts --last",
    "rollback:vercel": "npx tsx scripts/devops-suite/rollback.ts --vercel-only",
    "rollback:instant": "npx tsx scripts/devops-suite/rollback.ts --vercel-only",
    "env:check": "npx tsx scripts/devops-suite/vercel-env-check.ts",
    "env:check:all": "npx tsx scripts/devops-suite/vercel-env-check.ts --all",
    "env:sync": "npx tsx scripts/devops-suite/vercel-env-check.ts --sync",
    "state:capture": "npx tsx scripts/dev-tools/capture-system-state.ts capture",
    "state:read": "npx tsx scripts/dev-tools/capture-system-state.ts read",
    "state:check-stale": "npx tsx scripts/dev-tools/capture-system-state.ts check-stale",
    "health": "npx tsx scripts/devops-suite/health-check.ts",
    "health:quick": "npx tsx scripts/devops-suite/health-check.ts quick",
    "status": "npx tsx scripts/devops-suite/deployment-status.ts status",
    "status:history": "npx tsx scripts/devops-suite/deployment-status.ts history",
    "db:introspect": "npx tsx scripts/database-suite/db-introspect.ts",
    "db:generate-migration": "npx tsx scripts/generate-migration.ts",
    "db:validate": "npx tsx scripts/database-suite/validate.ts",
    "training:label": "node scripts/create-ground-truth-label.js",
    "training:validate": "node scripts/run-training-validation.js",
    "training:report": "node scripts/run-training-validation.js",
    "training:accuracy": "node scripts/run-vision-accuracy-test.js",
    "vision:validate": "npx tsx lib/vision/tools/validate-against-training-data.ts",
    "vision:few-shot": "npx tsx lib/vision/tools/test-few-shot-impact.ts",
    "vision:test": "npx tsx lib/vision/tools/test-single-dashboard.ts",
    "db:seed:smartphone": "npx tsx scripts/dev-tools/seed-smartphone.ts",
    "demo:reset": "npm run db:seed:smartphone",
    "demo:full": "npm run db:migrate && npm run db:seed:smartphone && npm run dev"
  },
  "keywords": [
    "fleet",
    "ai",
    "compliance",
    "telematics",
    "audit"
  ],
  "author": "Intelligence Studio",
  "license": "UNLICENSED",
  "dependencies": {
    "@ai-sdk/openai": "^2.0.40",
    "@hookform/resolvers": "^5.2.2",
    "@mapbox/mapbox-gl-geocoder": "^5.1.2",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-hover-card": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.14",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.57.4",
    "@tailwindcss/forms": "^0.5.10",
    "@types/formidable": "^3.4.5",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/leaflet": "^1.9.21",
    "@types/node": "^20.19.17",
    "@types/pdfkit": "^0.17.3",
    "@types/pg": "^8.15.5",
    "@types/react": "^18.3.24",
    "@types/uuid": "^9.0.8",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "@vercel/kv": "^3.0.0",
    "ai": "^5.0.58",
    "autoprefixer": "^10.4.21",
    "canvas-confetti": "^1.9.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "date-fns": "^2.30.0",
    "dotenv": "^16.6.1",
    "eslint": "^8.57.1",
    "exif-js": "^2.3.0",
    "formidable": "^3.5.4",
    "framer-motion": "^12.23.24",
    "heic-convert": "^2.1.0",
    "ioredis": "^5.8.1",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jsonwebtoken": "^9.0.2",
    "jspdf": "^3.0.3",
    "leaflet": "^1.9.4",
    "lucide-react": "^0.544.0",
    "mapbox-gl": "^3.15.0",
    "next": "^15.5.4",
    "next-auth": "^4.24.11",
    "node-fetch": "^3.3.2",
    "openai": "^4.104.0",
    "pdfkit": "^0.17.2",
    "pg": "^8.16.3",
    "postcss": "^8.5.6",
    "prom-client": "^14.2.0",
    "queue-microtask": "^1.2.3",
    "react": "^19.1.1",
    "react-day-picker": "^9.11.0",
    "react-dom": "^19.1.1",
    "react-dropzone": "^14.3.8",
    "react-easy-crop": "^5.5.3",
    "react-hook-form": "^7.63.0",
    "react-leaflet": "^5.0.0",
    "react-markdown": "^10.1.0",
    "recharts": "^2.15.4",
    "remark-gfm": "^4.0.1",
    "sharp": "^0.34.4",
    "stripe": "^14.25.0",
    "swr": "2.3.6",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "tesseract.js": "^4.1.4",
    "ts-jest": "^29.4.4",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.8.0",
    "@types/canvas-confetti": "^1.9.0",
    "@types/exif-js": "^2.3.1",
    "@types/glob": "^8.1.0",
    "esbuild": "^0.25.10",
    "glob": "^11.0.3",
    "jest-environment-jsdom": "^30.2.0",
    "node-mocks-http": "^1.17.2",
    "tsx": "^4.20.6",
    "uuid": "^13.0.0"
  }
}
