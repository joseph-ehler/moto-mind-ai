/**
 * AIBadge Component
 * 
 * Indicates AI-generated or AI-enhanced fields
 * Provides transparency and builds user trust
 */

'use client'

import { Sparkles, Info } from 'lucide-react'
import * as Tooltip from '@radix-ui/react-tooltip'

interface AIBadgeProps {
  /** What type of AI processing was done */
  type?: 'generated' | 'enhanced' | 'detected' | 'calculated'
  /** Confidence score (0-1). Show warning if < 0.9 */
  confidence?: number
  /** Custom tooltip message */
  tooltip?: string
  /** Size variant */
  size?: 'sm' | 'md' | 'lg'
  /** Show inline next to field or as a badge */
  variant?: 'inline' | 'badge'
  /** Field name for default messaging */
  fieldName?: string
}

const defaultMessages = {
  generated: 'This field was automatically generated by AI',
  enhanced: 'This field was enhanced using AI',
  detected: 'Automatically detected from your receipt',
  calculated: 'Calculated using AI-powered analysis'
}

const sizeClasses = {
  sm: 'w-3 h-3',
  md: 'w-3.5 h-3.5',
  lg: 'w-4 h-4'
}

export function AIBadge({ 
  type = 'enhanced',
  confidence,
  tooltip,
  size = 'sm',
  variant = 'inline',
  fieldName
}: AIBadgeProps) {
  const showWarning = confidence !== undefined && confidence < 0.9
  
  const tooltipContent = tooltip || 
    (fieldName ? `${fieldName} was ${type === 'detected' ? 'detected' : type} by AI` : defaultMessages[type]) +
    (confidence ? ` (${Math.round(confidence * 100)}% confidence)` : '')

  if (variant === 'badge') {
    return (
      <Tooltip.Provider delayDuration={200}>
        <Tooltip.Root>
          <Tooltip.Trigger asChild>
            <span className="inline-flex items-center gap-1 px-2 py-0.5 rounded-full bg-purple-50 border border-purple-200 text-purple-700 text-xs font-medium cursor-help">
              <Sparkles className="w-3 h-3" />
              AI-enhanced
              {showWarning && (
                <Info className="w-3 h-3 text-amber-500" />
              )}
            </span>
          </Tooltip.Trigger>
          <Tooltip.Portal>
            <Tooltip.Content
              className="bg-gray-900 text-white text-xs rounded-lg px-3 py-2 max-w-xs shadow-xl z-50"
              sideOffset={5}
            >
              {tooltipContent}
              {showWarning && (
                <div className="mt-1 text-amber-300">
                  Please verify this information
                </div>
              )}
              <Tooltip.Arrow className="fill-gray-900" />
            </Tooltip.Content>
          </Tooltip.Portal>
        </Tooltip.Root>
      </Tooltip.Provider>
    )
  }

  // Inline variant
  return (
    <Tooltip.Provider delayDuration={200}>
      <Tooltip.Root>
        <Tooltip.Trigger asChild>
          <span className="inline-flex items-center gap-0.5 cursor-help">
            <Sparkles className={`${sizeClasses[size]} text-purple-500`} />
            {showWarning && (
              <Info className={`${sizeClasses[size]} text-amber-500`} />
            )}
          </span>
        </Tooltip.Trigger>
        <Tooltip.Portal>
          <Tooltip.Content
            className="bg-gray-900 text-white text-xs rounded-lg px-3 py-2 max-w-xs shadow-xl z-50"
            sideOffset={5}
          >
            {tooltipContent}
            {showWarning && (
              <div className="mt-1 text-amber-300">
                Please verify this information
              </div>
            )}
            <Tooltip.Arrow className="fill-gray-900" />
          </Tooltip.Content>
        </Tooltip.Portal>
      </Tooltip.Root>
    </Tooltip.Provider>
  )
}

/**
 * AIDisclaimer Component
 * 
 * Footer disclaimer about AI usage
 */
export function AIDisclaimer() {
  return (
    <div className="flex items-center justify-center gap-2 text-xs text-gray-500 py-2">
      <Sparkles className="w-3.5 h-3.5 text-purple-400" />
      <span>Some data enhanced by AI. Always verify important information.</span>
    </div>
  )
}
