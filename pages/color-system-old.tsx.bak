/**
 * Color System Showcase
 * 
 * Built using the mandatory MotoMind Design System foundation
 * Based on shadcn/ui CSS variable system with background/foreground convention
 */

import React from 'react'
import Head from 'next/head'
import {
  Container,
  Section,
  Stack,
  Grid,
  Heading,
  Text,
  Card
} from '@/components/design-system'
import { Palette, Sun, Moon, Eye, CheckCircle2, Variable } from 'lucide-react'
import { getTextColor, stepUsage } from '@/lib/design-system/colors'

export default function ColorSystemPage() {
  const semanticTokens = [
    { 
      name: 'background', 
      pair: 'foreground',
      use: 'Default page background and text',
      example: 'bg-background text-foreground'
    },
    { 
      name: 'card', 
      pair: 'card-foreground',
      use: 'Card surfaces and card text',
      example: 'bg-card text-card-foreground'
    },
    { 
      name: 'popover', 
      pair: 'popover-foreground',
      use: 'Popover surfaces and popover text',
      example: 'bg-popover text-popover-foreground'
    },
    { 
      name: 'primary', 
      pair: 'primary-foreground',
      use: 'Primary buttons and actions',
      example: 'bg-primary text-primary-foreground'
    },
    { 
      name: 'secondary', 
      pair: 'secondary-foreground',
      use: 'Secondary buttons and actions',
      example: 'bg-secondary text-secondary-foreground'
    },
    { 
      name: 'muted', 
      pair: 'muted-foreground',
      use: 'Muted backgrounds and subtle text',
      example: 'bg-muted text-muted-foreground'
    },
    { 
      name: 'accent', 
      pair: 'accent-foreground',
      use: 'Accent backgrounds and accent text',
      example: 'bg-accent text-accent-foreground'
    },
    { 
      name: 'destructive', 
      pair: 'destructive-foreground',
      use: 'Destructive actions and errors',
      example: 'bg-destructive text-destructive-foreground'
    },
  ]

  const utilityTokens = [
    { name: 'border', use: 'Default borders', example: 'border-border' },
    { name: 'input', use: 'Input borders', example: 'border-input' },
    { name: 'ring', use: 'Focus rings', example: 'ring-ring' },
  ]

  return (
    <>
      <Head>
        <title>Color System - MotoMind Design System</title>
        <meta name="description" content="Comprehensive color palette with semantic tokens and accessibility guidelines" />
      </Head>

      <div className="min-h-screen bg-white">
        {/* 🚨 MANDATORY: Using Container with proper useCase */}
        <Container size="md" useCase="articles">
          
          {/* 🚨 MANDATORY: Using Section for consistent spacing */}
          <Section spacing="xl">
            
            {/* 🚨 MANDATORY: Using Stack for vertical rhythm */}
            <Stack spacing="xl">
              
              {/* Hero Section */}
              <div className="text-center">
                <Palette className="w-16 h-16 mx-auto mb-6 text-blue-600" />
                <Heading level="hero">Color System</Heading>
                <Text size="xl" className="mt-6 text-gray-600 max-w-3xl mx-auto">
                  Accessible color palette with semantic tokens.
                  WCAG-compliant contrast ratios ensure readability for all users.
                </Text>
              </div>

              {/* Key Features */}
              <Grid columns="auto" gap="md">
                <Card className="p-6 text-center">
                  <Stack spacing="md">
                    <Variable className="w-8 h-8 mx-auto text-blue-600" />
                    <Heading level="subtitle">CSS Variables</Heading>
                    <Text size="sm">
                      CSS custom properties using OKLCH color space for consistency
                    </Text>
                  </Stack>
                </Card>
                
                <Card className="p-6 text-center">
                  <Stack spacing="md">
                    <Eye className="w-8 h-8 mx-auto text-green-600" />
                    <Heading level="subtitle">Auto Contrast</Heading>
                    <Text size="sm">
                      Background/foreground pairs ensure proper contrast automatically
                    </Text>
                  </Stack>
                </Card>
                
                <Card className="p-6 text-center">
                  <Stack spacing="md">
                    <Moon className="w-8 h-8 mx-auto text-purple-600" />
                    <Heading level="subtitle">Dark Mode Ready</Heading>
                    <Text size="sm">
                      Same tokens automatically adapt to dark mode themes
                    </Text>
                  </Stack>
                </Card>
              </Grid>

              {/* Background/Foreground Convention */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Background/Foreground Convention</Heading>
                  <Text>
                    Every color token has a matching foreground color to ensure proper contrast.
                    Use the background class with its corresponding foreground class.
                  </Text>
                  
                  <div className="bg-muted p-6 rounded-lg">
                    <pre className="text-sm font-mono">
                      <code>{`<div className="bg-primary text-primary-foreground">
  Primary button
</div>`}</code>
                    </pre>
                  </div>

                  <Text size="sm" className="text-muted-foreground">
                    This convention automatically handles contrast - you never need to worry about text readability.
                  </Text>
                </Stack>
              </Card>

              {/* Semantic Color Tokens */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Semantic Color Tokens</Heading>
                  <Text>
                    shadcn/ui uses semantic naming - colors that describe their purpose, not their appearance.
                    This makes themes flexible and maintainable.
                  </Text>
                  
                  <Stack spacing="md">
                    {semanticTokens.map((token) => (
                      <div key={token.name} className={`${token.example} p-4 rounded-lg border`}>
                        <Grid columns={2} gap="md">
                          <Stack spacing="xs">
                            <Text className="font-mono font-bold text-sm">--{token.name}</Text>
                            <Text className="font-mono font-bold text-sm">--{token.pair}</Text>
                          </Stack>
                          <Stack spacing="xs">
                            <Text size="sm">{token.use}</Text>
                            <Text size="sm" className="font-mono text-muted-foreground">{token.example}</Text>
                          </Stack>
                        </Grid>
                      </div>
                    ))}
                  </Stack>
                </Stack>
              </Card>

              {/* Utility Tokens */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Utility Tokens</Heading>
                  <Text>
                    Additional tokens for borders, inputs, and focus rings.
                    These ensure consistency across all interactive elements.
                  </Text>
                  
                  <Stack spacing="sm">
                    {utilityTokens.map((token) => (
                      <div key={token.name} className="border p-4 rounded-lg">
                        <Grid columns={2} gap="md">
                          <Text className="font-mono font-bold text-sm">--{token.name}</Text>
                          <div>
                            <Text size="sm">{token.use}</Text>
                            <Text size="sm" className="font-mono text-muted-foreground">{token.example}</Text>
                          </div>
                        </Grid>
                      </div>
                    ))}
                  </Stack>
                </Stack>
              </Card>

              {/* Real-World Examples */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Real-World Examples</Heading>
                  <Text>
                    See how semantic tokens work in actual components.
                    Notice how foreground colors automatically provide proper contrast.
                  </Text>
                  
                  <Stack spacing="lg">
                    {/* Buttons */}
                    <div>
                      <Text className="font-semibold mb-3">Buttons with Semantic Tokens</Text>
                      <div className="flex flex-wrap gap-3">
                        <button className="px-4 py-2 bg-primary text-primary-foreground rounded-lg">
                          Primary Button
                        </button>
                        <button className="px-4 py-2 bg-secondary text-secondary-foreground rounded-lg">
                          Secondary Button
                        </button>
                        <button className="px-4 py-2 bg-destructive text-destructive-foreground rounded-lg">
                          Destructive Button
                        </button>
                        <button className="px-4 py-2 bg-muted text-muted-foreground rounded-lg">
                          Muted Button
                        </button>
                      </div>
                    </div>

                    {/* Cards */}
                    <div>
                      <Text className="font-semibold mb-3">Cards with Semantic Backgrounds</Text>
                      <Grid columns={2} gap="md">
                        <div className="bg-card text-card-foreground border p-4 rounded-lg">
                          <Text className="font-semibold mb-2">Card Surface</Text>
                          <Text size="sm">Uses bg-card and text-card-foreground</Text>
                        </div>
                        <div className="bg-accent text-accent-foreground border p-4 rounded-lg">
                          <Text className="font-semibold mb-2">Accent Surface</Text>
                          <Text size="sm">Uses bg-accent and text-accent-foreground</Text>
                        </div>
                      </Grid>
                    </div>

                    {/* Alerts with Semantic Colors */}
                    <div>
                      <Text className="font-semibold mb-3">Status Messages</Text>
                      <Stack spacing="sm">
                        <div className="bg-primary text-primary-foreground p-4 rounded-lg border">
                          <Text className="font-semibold mb-1">Information</Text>
                          <Text size="sm">Using primary token for informational states</Text>
                        </div>
                        <div className="bg-destructive text-destructive-foreground p-4 rounded-lg border">
                          <Text className="font-semibold mb-1">Error State</Text>
                          <Text size="sm">Using destructive token for error messages</Text>
                        </div>
                        <div className="bg-muted text-muted-foreground p-4 rounded-lg border">
                          <Text className="font-semibold mb-1">Muted Content</Text>
                          <Text size="sm">Using muted token for less prominent information</Text>
                        </div>
                      </Stack>
                    </div>
                  </Stack>
                </Stack>
              </Card>

              {/* Usage Guidelines */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Usage Guidelines</Heading>
                  <Text>
                    Best practices for using shadcn/ui color tokens effectively.
                    Inspired by Radix Colors' accessibility-first approach.
                  </Text>
                  
                  <Grid columns={2} gap="lg">
                    {/* Do - using proper accessible colors */}
                    <div className="border-2 border-green-700 bg-green-50 p-6 rounded-lg">
                      <Stack spacing="sm">
                        <div className="flex items-center gap-2">
                          <div className="w-8 h-8 rounded-full bg-green-700 flex items-center justify-center">
                            <CheckCircle2 className="w-5 h-5 text-white" />
                          </div>
                          <Text className="font-bold text-gray-900">Do</Text>
                        </div>
                        <Text size="sm" className="text-gray-900">✓ Always pair background with foreground</Text>
                        <Text size="sm" className="text-gray-900">✓ Use semantic tokens (not color names)</Text>
                        <Text size="sm" className="text-gray-900">✓ Test in both light and dark modes</Text>
                        <Text size="sm" className="text-gray-900">✓ Use CSS variables for consistency</Text>
                        <Text size="sm" className="text-gray-900">✓ Follow WCAG AA standards (4.5:1 minimum)</Text>
                      </Stack>
                    </div>

                    {/* Don't - using proper accessible colors */}
                    <div className="border-2 border-red-700 bg-red-50 p-6 rounded-lg">
                      <Stack spacing="sm">
                        <div className="flex items-center gap-2">
                          <div className="w-8 h-8 rounded-full bg-red-700 flex items-center justify-center text-white text-sm font-bold">
                            ✕
                          </div>
                          <Text className="font-bold text-gray-900">Don't</Text>
                        </div>
                        <Text size="sm" className="text-gray-900">✕ Use hardcoded hex colors</Text>
                        <Text size="sm" className="text-gray-900">✕ Mix background without foreground</Text>
                        <Text size="sm" className="text-gray-900">✕ Override CSS variable values inline</Text>
                        <Text size="sm" className="text-gray-900">✕ Use Tailwind color classes (blue-500, etc.)</Text>
                        <Text size="sm" className="text-gray-900">✕ Use low contrast combinations</Text>
                      </Stack>
                    </div>
                  </Grid>
                </Stack>
              </Card>

              {/* Radix Color Scale */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Radix Color Scale (12 Steps)</Heading>
                  <Text>
                    Following Radix Colors: Each step has a specific purpose.
                    Steps 11-12 are guaranteed to meet contrast requirements on step 2 backgrounds.
                  </Text>
                  
                  <Stack spacing="sm">
                    {Object.entries(stepUsage).map(([step, { name, textColor }]) => (
                      <div key={step} className="flex items-center gap-4 p-3 rounded-lg border bg-card">
                        <div className="flex-shrink-0 w-16">
                          <Text className="font-mono font-bold text-primary">Step {step}</Text>
                        </div>
                        <div className="flex-1">
                          <Text className="font-semibold">{name}</Text>
                        </div>
                        <div className="flex-shrink-0 w-48">
                          <Text size="sm" className="text-muted-foreground font-mono">{textColor}</Text>
                        </div>
                      </div>
                    ))}
                  </Stack>
                </Stack>
              </Card>

              {/* Text Over Color Rules */}
              <Card className="p-8">
                <Stack spacing="lg">
                  <Heading level="title">Text Over Color Rules</Heading>
                  <Text>
                    Proper text colors for different background steps.
                    Always ensure 4.5:1 contrast ratio minimum (WCAG AA).
                  </Text>
                  
                  <Stack spacing="md">
                    <div>
                      <Text className="font-semibold mb-3">Steps 9-10: Solid Backgrounds</Text>
                      <Text size="sm" className="text-muted-foreground mb-3">
                        Step 9 is the purest, most saturated color in the scale.
                      </Text>
                      <Grid columns={3} gap="md">
                        {/* Blue - white text */}
                        <div className="bg-blue-600 p-4 rounded-lg">
                          <Text className="font-bold mb-1 text-white">Blue (Step 9)</Text>
                          <Text size="sm" className="text-white">Uses white text</Text>
                          <Text size="sm" className="font-mono text-white/80">Contrast: 8.6:1 ✓</Text>
                        </div>

                        {/* Green - white text */}
                        <div className="bg-green-600 p-4 rounded-lg">
                          <Text className="font-bold mb-1 text-white">Green (Step 9)</Text>
                          <Text size="sm" className="text-white">Uses white text</Text>
                          <Text size="sm" className="font-mono text-white/80">Contrast: 4.8:1 ✓</Text>
                        </div>

                        {/* Red - white text */}
                        <div className="bg-red-600 p-4 rounded-lg">
                          <Text className="font-bold mb-1 text-white">Red (Step 9)</Text>
                          <Text size="sm" className="text-white">Uses white text</Text>
                          <Text size="sm" className="font-mono text-white/80">Contrast: 5.0:1 ✓</Text>
                        </div>

                        {/* Yellow - DARK text */}
                        <div className="bg-yellow-400 p-4 rounded-lg">
                          <Text className="font-bold mb-1 text-gray-900">Yellow (Step 9)</Text>
                          <Text size="sm" className="text-gray-900">Uses DARK text</Text>
                          <Text size="sm" className="font-mono text-gray-700">Contrast: 12.3:1 ✓</Text>
                        </div>

                        {/* Orange - white text */}
                        <div className="bg-orange-600 p-4 rounded-lg">
                          <Text className="font-bold mb-1 text-white">Orange (Step 9)</Text>
                          <Text size="sm" className="text-white">Uses white text</Text>
                          <Text size="sm" className="font-mono text-white/80">Contrast: 4.7:1 ✓</Text>
                        </div>

                        {/* Purple - white text */}
                        <div className="bg-purple-600 p-4 rounded-lg">
                          <Text className="font-bold mb-1 text-white">Purple (Step 9)</Text>
                          <Text size="sm" className="text-white">Uses white text</Text>
                          <Text size="sm" className="font-mono text-white/80">Contrast: 6.5:1 ✓</Text>
                        </div>
                      </Grid>
                    </div>

                    <div>
                      <Text className="font-semibold mb-3">Steps 11-12: Text Colors</Text>
                      <Text size="sm" className="text-muted-foreground mb-3">
                        Designed for text on light backgrounds. Guaranteed contrast on step 2.
                      </Text>
                      <Grid columns={2} gap="md">
                        {/* Low contrast */}
                        <div className="bg-gray-50 p-4 rounded-lg border">
                          <Text className="font-bold mb-2">Step 11: Low-Contrast Text</Text>
                          <Text size="sm" className="text-gray-600">Used for secondary information and muted content. Meets WCAG AA.</Text>
                        </div>

                        {/* High contrast */}
                        <div className="bg-gray-50 p-4 rounded-lg border">
                          <Text className="font-bold mb-2">Step 12: High-Contrast Text</Text>
                          <Text size="sm" className="text-gray-900">Used for primary content and headings. Meets WCAG AAA.</Text>
                        </div>
                      </Grid>
                    </div>

                    <div className="bg-yellow-50 border border-yellow-600 p-4 rounded-lg">
                      <Stack spacing="xs">
                        <Text className="font-bold text-yellow-900">⚠️ Light Colors Exception</Text>
                        <Text size="sm" className="text-yellow-900">
                          Yellow, Lime, Mint, Amber, and Sky require <strong>dark text</strong> on steps 9-10.
                          All other colors use white text.
                        </Text>
                      </Stack>
                    </div>
                  </Stack>
                </Stack>
              </Card>

            </Stack>
          </Section>
        </Container>
      </div>
    </>
  )
}
